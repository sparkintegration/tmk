config set link::MAKE_LIB 1
config set link::MAKE_SHLIB 0
config set link::SHLIB_OPTIONS lib_in_lib

config proc filename_lib    { shortname } { return "lib${shortname}.a"  }
config proc filename_shlib  { shortname } { return "lib${shortname}.so" }
config proc filename_shobj  { shortname } { return "${shortname}.so"    }
config proc filename_obj    { shortname } { return "${shortname}.o"     }
config proc filename_exe    { shortname } { return "${shortname}"       }

config set swig::SWIG /cross/distrix3/osx/swig/bin/swig

config proc swig::python::libname {basename} { return $basename }

namespace eval zlib {
    config set LIBS { z_spark }
}

namespace eval cjson {
    config set LIBS { cJSON_spark m }
}

namespace eval graphviz {
    config set LIBS { graphviz_spark }
}

namespace eval time {
    config when_target os=mswin {
        config set LIBS { winmm }
    }
    config when_target os=linux {
        config when_target arch!=android {
            config set LIBS { rt }
        }
    }
}

namespace eval pcre {
    config set LIBS { pcre_spark }
}

namespace eval math {
    config set LIBS { m }
}

namespace eval sqlite3 {
    config set DEFS { _FILE_OFFSET_BITS=64 }
    config set LIBS { sqlite3_spark }
    
    config when_target os=linux {
        config set LIBS { sqlite3_spark dl }
    }
}

namespace eval socket {
    config when_target os=mswin {
        config set LIBS { ws2_32 }
    }
}

namespace eval openssl {
    config when_target os=osx {
        config set LIBS { ssl_spark crypto_spark }
    }
    config when_target os=mswin {
        config set LIBS { ssl_spark crypto_spark gdi32 ws2_32 }
        config set DEPEND { socket }
    }
    config when_target os=linux {
        config set LIBS { ssl_spark crypto_spark dl }
    }
}

namespace eval bluetooth {
    config when_target os=linux {
        config set LIBS { bluetooth }
    }
}

namespace eval seh {
    config when_target os=mswin {
        config set LIBS { seh }
    }
}

namespace eval event {
    config set DEPEND { openssl socket time zlib }
    config set LIBS { event_spark }
}
