module { grep }

#    Variable: MAKENSIS
#        The `makensis` executable to compile the installer with
set_ifndef MAKENSIS    /usr/local/bin/makensis
#    Variable: FLAGS
#        Extra flags to pass to the NSIS compiler
set_ifndef FLAGS    "-V4"
#    Variable: SUFFIX
#        The file extension for NSIS scripts to be compiled into installers
set_ifndef SUFFIX    .nsi
#    Variable: DETECT
#        Automatically detect NSIS files
set_ifndef DETECT    1

#    Variable: PROJINCS
#        Additional include directories
set_ifndef PROJINCS {}

set_ifndef BUILD_DIR [file join $::PROJROOT $::SUBDIR [tmk_output_dir]]

proc fix_define {name} {
    regsub -all {[+]} $name "x" name
    regsub -all {[^a-zA-Z0-9_]} $name "_" name
    return $name
}

set DEFINES(HOST_OS_[fix_define [string toupper $OS]]) 1
set DEFINES(TARGET_ARCH_[fix_define [string toupper $::TARGET_ARCH]]) 1

proc default_flags {} {
    global ::nsis::FLAGS 
    set result $::nsis::FLAGS
    foreach {key value} [array get ::nsis::DEFINES] {
        lappend result "-D$key=$value"
    }
    lappend result -DBUILD_DIR=[tmk_output_dir] -DNAMED_BUILD_DIR=[tmk_named_output_dir] -DPROJROOT=$::PROJROOT
    return $result
}

proc make_installer {nsifile {installer {}}} {
    if {$installer == {}} {
        set installer "[file rootname ${nsifile}].exe"
    }

    set flags [join [::nsis::default_flags] " "]
    set rule {
        set cmd [list cmd $nsis::MAKENSIS $flags -XOutFile\\ \$TARGET \$SRC | tee \${TARGET}.log]
        uplevel \#0 \$cmd
        
        set total_line [grep "Total size:" \${TARGET}.log]
        regexp {Total size:\\s+(\\d+) / (\\d+) bytes} \$total_line junk compressed uncompressed
        set file_info "# Compressed installer size
!define _component_compressed_size_bytes    \${compressed}
# Uncompressed installer size
!define _component_uncompressed_size_bytes    \${uncompressed}
"
        write_file [file join [file dirname \${TARGET}] installer_info.nsh] file_info
    }
    target $installer $nsifile [subst -nocommands $rule]
    build $installer
}
    
eval_after {
    foreach dir [concat $::PROJROOT $::PROJ_LOCATIONS] {
        lappend FLAGS -X\!addincludedir\\ ${dir}
    }

    foreach dir $PROJINCS {
        foreach root [concat $::PROJROOT $::PROJ_LOCATIONS] {
            set path [file nativename [file join $root $dir]]
            if { [file isdirectory $path] } {
                lappend FLAGS -X\!addincludedir\ ${path}
            } else {
                exit_msg "!!! Invalid PROJINC: ${path} !!!"
            }
        }
    }
    
    if $nsis::DETECT {
        foreach file [glob -nocomplain *$SUFFIX] {
            nsis::make_installer $file
        }
    }
}
